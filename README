This is for easy and automatic setup of a VPN using openvpn in the
case where you've got root ssh access to the server, and, currently,
only have one client. It uses preshared keys, and ssh is used to share
the keys, get the necessary serverside information and set up and tear
down the openvpn daemon.

NOTE: a previous version of this script did selective routing of
traffic according to user/group ids; this has now been moved to a
separate 'selective' Git branch.


LIMITATIONS:

 - only tested on Debian

 - it currently probably only works for one client per server:
   the tunX interface name and IPs used for the VPN are configured
   statically in the script.

DEPENDENCIES:

 - on both the client and the server, it requires some tools from my
   "chj-bin" repository to be present and accessible in PATH
   (ssh_config-ref, daemonize). These could probably quite
   easily be replaced with something else or hard coded constants,
   though.

SETUP:

Install the dependencies on both client and server:

 * chj tools
    cd /opt; mkdir chj; cd chj
    git clone https://github.com/pflanze/chj-bin.git bin
    git clone https://github.com/pflanze/chj-perllib.git perllib
    mkdir -p /usr/local/lib/site_perl/
    ln -s /opt/chj/perllib/Chj/ /usr/local/lib/site_perl/
    # add /opt/chj/bin to PATH in /root/.bashrc

 * apt-get install openvpn

On client only:

 * cd /opt/chj
   git clone https://github.com/pflanze/openvpn-tunnel-setup.git
   # add to PATH if you like
 * vpn-tunnel start  # or stop or restart

The tunnel doesn't usually need to be restarted, even across periods
of the client being offline.

BUGS: -- obsolete?

  * Relatively often, I'm getting sudden periods where the UDP packets
    from openvpn aren't reaching the server, as can be confirmed by
    running tcpdump on the server. This then sorts itself out all by
    itself after 10-15 minutes or after the client going to sleep some
    time. It seems to usually happen soon after restarting the tunnel,
    thereafter the tunnel seems to be more stable; or maybe it's after
    periods of heavy traffic. I haven't figured out yet whether this
    is simply my ISP dropping them during these periods or whether
    there is something else going on. Tcpdump reports the packets as
    leaving the client through the interface towards the ISP, so that
    would hint that it's the ISP, but maybe they are killed by the
    kernel after tcpdump sees them?

  * Tunnel setup/teardown is a bit slow because of the many remote ssh
    calls.

