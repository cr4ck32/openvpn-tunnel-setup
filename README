This is for easy and automatic setup of a VPN using openvpn in the
case where you've got root ssh access to the server and only have one
client. It uses preshared keys, and ssh is used to share the keys, get
the necessary serverside information and set up and tear down the
openvpn daemon.

NOTE: a version of this script that routes all traffic by default
through the VPN can be found in the 'master' branch of this Git
repository.


LIMITATIONS:

 - only tested on Debian

 - it currently probably only works for one client per server:
   the tunX interface name and IPs used for the VPN are configured
   statically in the script.

DEPENDENCIES:

 - on both the client and the server, it requires some tools from my
   "chj-bin" repository to be present and accessible in PATH
   (ssh_config-ref, daemonize). These could probably quite
   easily be replaced with something else or hard coded constants,
   though.

SETUP:

Install the dependencies on both client and server:

 * chj tools
    cd /opt; mkdir chj; cd chj
    git clone https://github.com/pflanze/chj-bin.git bin
    git clone https://github.com/pflanze/chj-perllib.git perllib
    mkdir -p /usr/local/lib/site_perl/
    ln -s /opt/chj/perllib/Chj/ /usr/local/lib/site_perl/
    # add /opt/chj/bin to PATH in /root/.bashrc

 * apt-get install openvpn

On client only:

 * cd /opt/chj
   git clone https://github.com/pflanze/openvpn-tunnel-setup.git
   # add to PATH if you like
 * groupadd vpntunneled
 * for user in $users_you_want_to_be_tunneled
   do adduser $user vpntunneled; done
   # NOTE: I think you shouldn't include root in the list of users, as
   # the dhcp daemon would be tunneled as well, which would break the
   # host network.
 * vpn-tunnel start  # or stop or restart

The tunnel doesn't usually need to be restarted, even across periods
of the client being offline.

BUGS:

  * Relatively often, I'm getting sudden periods where the UDP packets
    from openvpn aren't reaching the server, as can be confirmed by
    running tcpdump on the server. This then sorts itself out all by
    itself after 10-15 minutes or after the client going to sleep some
    time. It seems to usually happen soon after restarting the tunnel,
    thereafter the tunnel seems to be more stable; or maybe it's after
    periods of heavy traffic. I haven't figured out yet whether this
    is simply my ISP dropping them during these periods or whether
    there is something else going on. Tcpdump reports the packets as
    leaving the client through the interface towards the ISP, so that
    would hint that it's the ISP, but maybe they are killed by the
    kernel after tcpdump sees them?

  * Tunnel setup/teardown is a bit slow because of the many remote ssh
    calls.

  * DNS requests are always redirected to the same single DNS server
    (the first one configured in /etc/resolv.conf on the server); if it
    goes down, the retries that applications do with different servers
    will go to the same dead server.

  * Due to an apparent bug in iptables in handling --gid-owner, the
    script looks up groups when starting; for this reason, adding
    users to the vpntunneled group only has effect on the next
    'vpn-tunnel start' invocation (also, if a user is removed from a
    group after start but before stop, then the stop action won't
    remove that user from the iptables entries).

  * There's some issue with ICMP and some TCP (ack) traffic not being
    routed through the VPN. I'm still searching for a solution.

